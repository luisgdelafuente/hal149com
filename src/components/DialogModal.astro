---

import X from '../assets/theme-images/icon-x.svg'
import { getLangFromUrl, useTranslations } from '../i18n/ui';

const { content } = Astro.props
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

---

<dialog id="demo" closedby="any" class="fixed inset-0 bg-bs-surface-0 m-auto z-50 p-6 md:p-12 rounded-xl w-full max-w-[95%] md:max-w-lg">

  <!-- Form -->
  <form 
    name="contact" 
    method="POST" 
    netlify
    netlify-honeypot="bot-field"
    class="flex gap-6 flex-col"
    id="contact-form"
  >
    <!-- Netlify form detection -->
    <input type="hidden" name="form-name" value="contact" />
    
    <!-- Honeypot field for spam protection -->
    <div class="hidden">
      <label for="bot-field">Don't fill this out if you're human:</label>
      <input name="bot-field" id="bot-field" />
    </div>

    <!-- Header -->
    <h2 class="text-2xl flex justify-between items-center gap-4">

      <span>{ content.title }</span>

      <button 
        type="button"
        onclick="this.closest('dialog').close('close')" 
        aria-label={t('close')}
        class="bs-btn rounded-full !p-0 flex items-center justify-center h-10 w-10"
      >

        <X class="scale-75 opacity-75" width="32" height="32" />

      </button>

    </h2>

    <!-- Content -->
    <div class="flex flex-col gap-4">

      <!-- Intro -->
      <div class="bs-body-text mb-3" set:html={ content.content } />

      <!-- Form inputs -->

      <!-- Name -->
      <label class="sr-only" for="name">{t('form.name.label')}</label>

      <input
        id="name"
        name="name"
        type="text"
        class="border-2 rounded-lg bg-bs-surface-0 border-bs-surface-3 form-input px-4 py-3"
        placeholder={t('form.name.placeholder')}
      >

      <!-- Company -->
      <label class="sr-only" for="company">{t('form.company.label')}</label>

      <input
        id="company"
        name="company"
        type="text"
        class="border-2 rounded-lg bg-bs-surface-0 border-bs-surface-3 form-input px-4 py-3"
        placeholder={t('form.company.placeholder')}
      >

      <!-- Email -->
      <label class="sr-only" for="email">{t('form.email.label')}</label>

      <input
        id="email"
        name="email"
        type="email"
        class="border-2 rounded-lg bg-bs-surface-0 border-bs-surface-3 form-input px-4 py-3"
        placeholder={t('form.email.placeholder')}
      >

      <!-- Submit -->
      <button type="submit" class="bs-btn form-input px-4 py-3">{t('form.submit')}</button>

    </div>

  </form>

  <!-- Thank you message (hidden by default) -->
  <div id="thank-you-message" class="hidden flex flex-col gap-6 items-center text-center">
    
    <!-- Success Icon -->
    <div class="mb-4">
      <svg class="w-16 h-16 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
    </div>

    <!-- Thank you title -->
    <h2 class="text-2xl font-bold">
      {t('thank-you.title')}
    </h2>

    <!-- Thank you message -->
    <div class="bs-body-text">
      <p>{t('thank-you.message')}</p>
    </div>

    <!-- Close button -->
    <button 
      type="button"
      onclick="this.closest('dialog').close('close')" 
      class="bs-btn"
    >
      {t('close')}
    </button>

  </div>

</dialog>

<script define:vars={{ t }}>
  // Form submission handling with thank you message
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form');
    const thankYouMessage = document.getElementById('thank-you-message');
    
    if (!form || !thankYouMessage) return;

    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Submit form data to Netlify
      const formData = new FormData(form);
      
      fetch('/', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams(formData).toString()
      })
      .then(response => {
        if (response.ok) {
          // Hide form and show thank you message
          form.style.display = 'none';
          thankYouMessage.classList.remove('hidden');
          
          // Close modal after 3 seconds
          setTimeout(() => {
            const dialog = document.getElementById('demo');
            dialog?.close();
            // Reset form for next time
            form.reset();
            form.style.display = 'flex';
            thankYouMessage.classList.add('hidden');
          }, 3000);
        }
      })
      .catch(error => {
        console.error('Form submission error:', error);
        // You could show an error message here if needed
      });
    });
  });
</script>

<style>

html:has(dialog[open]) {
  overflow: hidden;
  backdrop-filter: blur(0);
  scrollbar-gutter: stable;
}

dialog[open]::backdrop {
  backdrop-filter: blur(50px);
}

@keyframes scale-up {

  to {
    translate: 0 0;
    scale: 1;
  }

}

@media (prefers-reduced-motion: no-preference) {

  dialog {
    translate: 0 2rem;
    scale: .8
  }

  dialog[open] {
    animation: scale-up forwards 1s;
    animation-timing-function: var(--ease-bs-spring);
  }

}

</style>